import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'funnyString' function below.
     *
     * The function is expected to return a STRING.
     * The function accepts STRING s as parameter.
     */

//-------------------------------------------------------------------------------------------------------------------------------------------------------------------

    public static String funnyString(String s1) {
    // Write your code here
        StringBuffer str = new StringBuffer(s1);
        String s2 = str.reverse().toString();
        ArrayList<Integer> sum1 = new ArrayList<Integer>();
        ArrayList<Integer> sum2 = new ArrayList<Integer>();       
        for(int i=0; i<s1.length() - 1; i++) {
            int firstNum = s1.charAt(i);
            int secondNum = s1.charAt(i+1);
            int sum = secondNum - firstNum;
            sum1.add(Math.abs(sum));
        }
        for(int i=0; i<s2.length() - 1; i++) {
            int firstNum = s2.charAt(i);
            int secondNum = s2.charAt(i+1);
            int sum = firstNum - secondNum;
            sum2.add(Math.abs(sum));
        }
        String result = "";
        if(sum1.equals(sum2) == false) {
            result = "Not Funny";
        }
        else {
            result = "Funny";
        }
        return result;
    }

}

//-------------------------------------------------------------------------------------------------------------------------------------------------------------------

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int q = Integer.parseInt(bufferedReader.readLine().trim());

        IntStream.range(0, q).forEach(qItr -> {
            try {
                String s = bufferedReader.readLine();

                String result = Result.funnyString(s);

                bufferedWriter.write(result);
                bufferedWriter.newLine();
            } catch (IOException ex) {
                throw new RuntimeException(ex);
            }
        });

        bufferedReader.close();
        bufferedWriter.close();
    }
}
