import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'pangrams' function below.
     *
     * The function is expected to return a STRING.
     * The function accepts STRING s as parameter.
     */

//------------------------------------------------------------------------------------------------------------------------------------------------------------

    public static String pangrams(String s) {
    // Write your code here
        String s_upper = s.toUpperCase();
        String soln = "";
        int i = 65;
        int len = 0;
        String pana = "";
        while(len<s.length()) {
            if((char)i == s_upper.charAt(len)) {
                i++;
                pana += s_upper.charAt(len);
                len = 0;
            }
            else {
                len++;
            }
        }
        if(pana.charAt(pana.length() - 1) == 'Z') {
            soln = "pangram";
        }
        else{
            soln = "not pangram";
        }
        //return pana;
        return soln;
    }
}

//------------------------------------------------------------------------------------------------------------------------------------------------------------

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String s = bufferedReader.readLine();

        String result = Result.pangrams(s);

        bufferedWriter.write(result);
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
