import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'minimumNumber' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts following parameters:
     *  1. INTEGER n
     *  2. STRING password
     */
//---------------------------------------------------------------------------------------------------------------------------------------
    public static int minimumNumber(int n, String password) {
    // Return the minimum number of characters to make the password strong
        int lc = 0, uc = 0, num = 0, sc = 0;
        int sum_total = 0;
        for(int i=0; i<n; i++) {
            if(Character.isUpperCase(password.charAt(i))){
                uc++;
            }
            else if(Character.isLowerCase(password.charAt(i))){
                lc++;
            }
            else if(Character.isDigit(password.charAt(i))){
                num++;
            }
            else{
                sc++;
            }
        }
        ArrayList<Integer> vals = new ArrayList<Integer>();
        vals.add(uc);
        vals.add(lc);
        vals.add(sc);
        vals.add(num);
        for(int i=0; i<4; i++) {
            if(vals.get(i) == 0) {
                sum_total++;
            }
        }
        if((password.length() + sum_total) < 6) {
            sum_total += 6 - password.length() - sum_total;
        }
        return sum_total;
    }

}

//---------------------------------------------------------------------------------------------------------------------------------------

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = Integer.parseInt(bufferedReader.readLine().trim());

        String password = bufferedReader.readLine();

        int answer = Result.minimumNumber(n, password);

        bufferedWriter.write(String.valueOf(answer));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
